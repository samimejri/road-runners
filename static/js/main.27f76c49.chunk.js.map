{"version":3,"sources":["Ressources/MapStyle.ts","Ressources/icons.ts","Components/Map.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["mapStyle","UserIndicator","path","google","maps","SymbolPath","FORWARD_CLOSED_ARROW","fillColor","fillOpacity","strokeColor","scale","strokeWeight","rotation","origin","Point","Map","currentPosition","previousPosition","map","userMarker","shadowMarker","state","speed","heading","LatLng","lat","lng","this","document","getElementById","center","mapTypeId","zoom","disableDefaultUI","styles","Marker","position","icon","optimized","overlay","OverlayView","draw","getPanes","markerLayer","id","setMap","context","getElementsByTagName","getContext","shadowBlur","shadowColor","navigator","geolocation","watchPosition","positionUpdated","alert","enableHighAccuracy","maximumAge","timeout","coords","setPosition","latitude","longitude","panTo","Math","round","window","geometry","spherical","computeHeading","orientedIcon","setIcon","rotateMap","setState","degs","div","style","webkitTransform","transform","maxSize","innerHeight","innerWidth","width","height","className","Component","App","React","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","URL","process","href","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"mPAAaA,G,MACb,CACE,CACE,YAAe,WACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,SACf,QAAW,CACT,CACE,WAAc,SAIpB,CACE,YAAe,cACf,QAAW,CACT,CACE,WAAc,SAIpB,CACE,YAAe,mBACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,qBACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,iBACf,YAAe,WACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,yBACf,YAAe,mBACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,6BACf,QAAW,CACT,CACE,WAAc,SAIpB,CACE,YAAe,0BACf,YAAe,mBACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,8BACf,QAAW,CACT,CACE,WAAc,SAIpB,CACE,YAAe,MACf,YAAe,mBACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,WACf,YAAe,WACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,WACf,YAAe,mBACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,WACf,YAAe,qBACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,OACf,YAAe,gBACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,OACf,YAAe,kBACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,OACf,YAAe,mBACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,gBACf,YAAe,WACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,gBACf,YAAe,gBACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,gBACf,YAAe,kBACf,QAAW,CACT,CACE,MAAS,WAEX,CACE,OAAU,KAIhB,CACE,YAAe,eACf,YAAe,WACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,eACf,YAAe,gBACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,eACf,YAAe,kBACf,QAAW,CACT,CACE,MAAS,WAEX,CACE,WAAc,MAEhB,CACE,OAAU,KAIhB,CACE,YAAe,iCACf,YAAe,WACf,Q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","file":"static/js/main.27f76c49.chunk.js","sourcesContent":["export const mapStyle =\r\n[\r\n  {\r\n    \"elementType\": \"geometry\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#212121\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"elementType\": \"labels\",\r\n    \"stylers\": [\r\n      {\r\n        \"visibility\": \"off\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"elementType\": \"labels.icon\",\r\n    \"stylers\": [\r\n      {\r\n        \"visibility\": \"off\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"elementType\": \"labels.text.fill\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#757575\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"elementType\": \"labels.text.stroke\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#212121\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"administrative\",\r\n    \"elementType\": \"geometry\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#757575\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"administrative.country\",\r\n    \"elementType\": \"labels.text.fill\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#9e9e9e\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"administrative.land_parcel\",\r\n    \"stylers\": [\r\n      {\r\n        \"visibility\": \"off\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"administrative.locality\",\r\n    \"elementType\": \"labels.text.fill\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#bdbdbd\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"administrative.neighborhood\",\r\n    \"stylers\": [\r\n      {\r\n        \"visibility\": \"off\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"poi\",\r\n    \"elementType\": \"labels.text.fill\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#757575\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"poi.park\",\r\n    \"elementType\": \"geometry\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#181818\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"poi.park\",\r\n    \"elementType\": \"labels.text.fill\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#616161\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"poi.park\",\r\n    \"elementType\": \"labels.text.stroke\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#1b1b1b\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"road\",\r\n    \"elementType\": \"geometry.fill\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#2c2c2c\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"road\",\r\n    \"elementType\": \"geometry.stroke\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#0080ff\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"road\",\r\n    \"elementType\": \"labels.text.fill\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#8a8a8a\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"road.arterial\",\r\n    \"elementType\": \"geometry\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#373737\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"road.arterial\",\r\n    \"elementType\": \"geometry.fill\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#e4e4e4\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"road.arterial\",\r\n    \"elementType\": \"geometry.stroke\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#0080ff\"\r\n      },\r\n      {\r\n        \"weight\": 2\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"road.highway\",\r\n    \"elementType\": \"geometry\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#3c3c3c\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"road.highway\",\r\n    \"elementType\": \"geometry.fill\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#e4e4e4\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"road.highway\",\r\n    \"elementType\": \"geometry.stroke\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#0080ff\"\r\n      },\r\n      {\r\n        \"visibility\": \"on\"\r\n      },\r\n      {\r\n        \"weight\": 2\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"road.highway.controlled_access\",\r\n    \"elementType\": \"geometry\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#4e4e4e\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"road.highway.controlled_access\",\r\n    \"elementType\": \"geometry.fill\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#e4e4e4\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"road.highway.controlled_access\",\r\n    \"elementType\": \"geometry.stroke\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#0080ff\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"road.local\",\r\n    \"elementType\": \"geometry.fill\",\r\n    \"stylers\": [\r\n      {\r\n        \"visibility\": \"on\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"road.local\",\r\n    \"elementType\": \"labels.text.fill\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#616161\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"transit\",\r\n    \"elementType\": \"labels.text.fill\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#757575\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"water\",\r\n    \"elementType\": \"geometry\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#000000\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"water\",\r\n    \"elementType\": \"labels.text.fill\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#3d3d3d\"\r\n      }\r\n    ]\r\n  }\r\n];","export const UserIndicator =\r\n({\r\n    path: google.maps.SymbolPath.FORWARD_CLOSED_ARROW,\r\n    fillColor: 'crimson',\r\n    fillOpacity: 1,\r\n    strokeColor: 'white',\r\n    scale: 8,\r\n    strokeWeight: 3,\r\n    rotation: 0,\r\n    // anchor: new google.maps.Point(17, 20),\r\n    origin: new google.maps.Point(17, 20)\r\n})\r\n\r\nexport const Shadow =\r\n({\r\n    path: google.maps.SymbolPath.FORWARD_CLOSED_ARROW,\r\n    fillColor: 'black',\r\n    fillOpacity: 1,\r\n    scale: 8,\r\n    strokeColor: 'Black',\r\n    strokeWeight: 3,\r\n    rotation: 0,\r\n    anchor: new google.maps.Point(0, -1),\r\n    origin: new google.maps.Point(17, 20)\r\n})\r\n","import React, { Component } from 'react';\r\nimport { mapStyle } from '../Ressources/MapStyle';\r\nimport { UserIndicator } from '../Ressources/icons';\r\n\r\ninterface mapState {\r\n    speed: number | null,\r\n    heading: number\r\n}\r\n\r\nexport class Map extends Component<{}, mapState> {\r\n    currentPosition!: google.maps.LatLng;\r\n    previousPosition!: google.maps.LatLng;\r\n\r\n    map!: google.maps.Map;\r\n    userMarker!: google.maps.Marker;\r\n    shadowMarker!: google.maps.Marker;\r\n\r\n    constructor() {\r\n        super({});\r\n        this.state = { speed: 0, heading: 0 };\r\n        this.currentPosition = new google.maps.LatLng({ lat: 48.832380, lng: 2.234953 });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.map = new google.maps.Map(document.getElementById('map'), {\r\n            center: this.currentPosition,\r\n            mapTypeId: 'roadmap',\r\n            zoom: 18,\r\n            disableDefaultUI: true,\r\n            styles: mapStyle as google.maps.MapTypeStyle[]\r\n        });\r\n\r\n        this.userMarker = new google.maps.Marker({\r\n            position: this.currentPosition,\r\n            icon: UserIndicator,\r\n            optimized: false,\r\n            map: this.map\r\n        });\r\n\r\n\r\n        var overlay = new google.maps.OverlayView();\r\n        overlay.draw = function () {\r\n            this.getPanes().markerLayer.id = 'markerLayer';\r\n        };\r\n\r\n        overlay.setMap(this.map);\r\n\r\n        var markerLayer = document.getElementById(\"markerLayer\")\r\n        if (markerLayer) {\r\n            var canvas = markerLayer.getElementsByTagName(\"canvas\")[0];\r\n            var context = canvas.getContext(\"2d\");\r\n            if (context) {\r\n                context.shadowBlur = 2;\r\n                context.shadowColor = \"yellow\";\r\n            }\r\n        }\r\n\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.watchPosition(\r\n                (position) => {\r\n                    this.positionUpdated(position);\r\n                },\r\n                () => {\r\n                    alert(\"Failed to pan to new position!\");\r\n                },\r\n                {\r\n                    enableHighAccuracy: true,\r\n                    maximumAge: 0,\r\n                    timeout: 500\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    positionUpdated(position: Position) {\r\n        if (position.coords.speed) {\r\n            this.userMarker.setPosition({ lat: position.coords.latitude, lng: position.coords.longitude });\r\n            this.map.panTo({ lat: position.coords.latitude, lng: position.coords.longitude });\r\n\r\n            var heading = Math.round(window.google.maps.geometry.spherical.computeHeading(\r\n                this.previousPosition,\r\n                new google.maps.LatLng(position.coords.latitude, position.coords.longitude)));\r\n\r\n            var orientedIcon = UserIndicator;\r\n            orientedIcon.rotation = heading;\r\n            this.userMarker.setIcon(orientedIcon);\r\n\r\n            this.rotateMap(heading);\r\n\r\n            this.setState({\r\n                speed: Math.round(position.coords.speed),\r\n                heading: heading\r\n            });\r\n        }\r\n\r\n        this.previousPosition = new google.maps.LatLng({ lat: position.coords.latitude, lng: position.coords.longitude });\r\n    }\r\n\r\n    rotateMap(degs: number) {\r\n        var div = document.getElementById('map');\r\n        if (div != null) {\r\n            div.style.webkitTransform = 'rotateZ(' + -degs + 'deg) rotateX(45deg)';\r\n            div.style.transform = 'rotateZ(' + -degs + 'deg) rotateX(45deg)';\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var maxSize = window.innerHeight >= window.innerWidth ? window.innerHeight : window.innerWidth;\r\n        var mapStyle = { width: maxSize * 1.5, height: maxSize * 1.5, transform: 'rotateX(45deg)' };\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"map-container\">\r\n                    <div id=\"map\" style={mapStyle}></div>\r\n                    <h1 className=\"map-item\">{this.state.speed ? this.state.speed * 3.6 : '--'} km/h</h1>\r\n                </div>\r\n                <h1>{this.state.heading ? this.state.heading * 3.6 : '--'} °</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport './App.css';\nimport { Map } from './Components/Map';\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <div className=\"App grid-container\">\n        <div className=\"menu\">\n          <h5>Menu</h5>\n        </div>\n        <div className=\"header\">\n          <h4>Road Runners</h4>\n        </div>\n        <div className=\"content\">\n          <Map />\n        </div>\n        <div className=\"footer\">\n          <h5>footer</h5>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}